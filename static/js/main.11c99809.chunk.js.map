{"version":3,"sources":["Item/Item.styles.ts","Item/Item.tsx","CartItem/CartItem.styles.ts","CartItem/CartItem.tsx","Cart/Cart.styles.ts","Cart/Cart.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","aside","Cart","items","cartItems","length","map","reduce","akc","StyledButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","console","log","clickedItem","prev","find","LinearProgress","Drawer","anchor","open","onClose","ack","Badge","badgeContent","color","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.11c99809.chunk.js","sourcesContent":["import styled from \"styled-components\";\n \nexport const Wrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n    width: 100%;\n    border: 1px solid lightblue;\n    border-radius: 20px;\n    height: 100%;\n\n    button {\n        border-radius: 0 0 20px 20px;\n    }\n\n    img {\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        margin-top: 20px;\n        width: 70%;\n        object-fit: cover;\n        border-radius: 20px 20px 0 0;\n    }\n\n    div {\n        font-family: Arial, Helvetica, sans-serif;\n        padding: 1rem;\n        height: 100%\n    }\n`;","import Button from \"@material-ui/core/Button\";\n//Types\nimport { CartItemType } from \"../App\";\n//Styles\nimport { Wrapper } from \"./Item.styles\";\n\ntype Props = {\n    item: CartItemType;\n    handleAddToCart: (clickedItem: CartItemType) => void;\n}\n\nconst Item: React.FC<Props> = ({ item, handleAddToCart}) => (\n    <Wrapper>\n        <img src={item.image} alt={item.title} />\n        <div>\n            <h3>{item.title}</h3>\n            <p>{item.description}</p>\n            <h3>${item.price}</h3>\n        </div>\n        <Button onClick={() => handleAddToCart(item)}>Add to cart</Button>\n    </Wrapper>\n)\nexport default Item;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    font-family: Arial, Helvetica, sans-serif;\n    border-bottom: 1px solid lightblue;\n    padding-bottom: 20px;\n\n\n    div {\n        flex: 2;\n    }\n\n    .information{\n        display: flex;\n        justify-content: space-between;\n    } \n    .buttons {\n        display: flex;\n        justify-content: space-between;\n    }\n\n    img {\n        max-width:  80px;\n        object-fit: cover;\n        margin-left: 40px;\n    }\n`;","import Button from \"@material-ui/core/Button\";\n//Types\nimport { CartItemType } from \"../App\";\n//Styles\nimport { Wrapper } from \"./CartItem.styles\";\n\ntype Props ={\n    item: CartItemType;\n    addToCart: (clickedItem: CartItemType) => void;\n    removeFromCart: (id: number) => void;\n}\n\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => (\n    <Wrapper>\n        <div>\n            <h3>{item.title}</h3>\n            <div className=\"information\">\n                <p>Price: ${item.price}</p>\n                <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\n            </div>\n            <div className=\"buttons\">\n                <Button\n                    size=\"small\"\n                    disableElevation\n                    variant=\"contained\"\n                    onClick={() => removeFromCart(item.id)}\n                >\n                    -\n                </Button>\n                <p>{item.amount}</p>\n                <Button\n                    size=\"small\"\n                    disableElevation\n                    variant=\"contained\"\n                    onClick={() => addToCart(item)}\n                >\n                    +\n                </Button>\n            </div>\n        </div>\n        <img src={item.image} alt={item.title} />\n    </Wrapper>\n\n);\n\nexport default CartItem;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.aside`\n    font-family: Arial, Helvetica, sans-serif;\n    width: 500px;\n    padding: 20px;\n`;\n\n","import CartItem from \"../CartItem/CartItem\";\n//Styles\nimport { Wrapper } from \"./Cart.styles\";\n//Types\nimport { CartItemType } from \"../App\";\n\ntype Props = {\n    cartItems: CartItemType[];\n    addToCart: (clickedItem: CartItemType) => void;\n    removeFromCart: (id: number) => void;\n};\n\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart}) => {\n  const calculateTotal = (items: CartItemType[]) => \n    items.reduce((akc: number, item) => akc + item.amount * item.price, 0);\n  \n  return(\n        <Wrapper>\n          <h2>Your Shopping Cart</h2>\n          {cartItems.length === 0 ? <p>No items in cart...</p> : null}\n          {cartItems.map(item => (\n              <CartItem \n                key={item.id}\n                item={item}\n                addToCart={addToCart}\n                removeFromCart={removeFromCart}\n              />\n          ))}\n          <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\n        </Wrapper>\n    )\n}\n\nexport default Cart;","import styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n\nexport const Wrapper = styled.div`\n    margin: 40px;\n`;\n\nexport const StyledButton = styled(IconButton)`\n    position: fixed;\n    z-index: 100;\n    right: 20px;\n    top: 20px;\n`;","import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n// Components\nimport Item from \"./Item/Item\";\nimport Cart from \"./Cart/Cart\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport Badge from \"@material-ui/core/Badge\";\n//Styles\nimport { Wrapper, StyledButton } from \"./App.styles\"\n//Types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n}\n\nconst getProducts = async(): Promise<CartItemType[]>=> \n  await (await fetch(\"https://fakestoreapi.com/products\")).json();\n\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n\n\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    \"products\", \n    getProducts\n  );\n  console.log(data);\n\n  const getTotalItems = (items: CartItemType[]) => \n    items.reduce((ack: number, item) => ack + item.amount, 0);\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems(prev => {\n      //1. is the item alraeady added in the cart?\n      const isItemInCart = prev.find(item => item.id === clickedItem.id)\n\n      if (isItemInCart){\n        return prev.map(item => \n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        );\n      }\n      //First time the item is added\n      return [...prev, { ...clickedItem, amount: 1 }]\n    });\n  };\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems( prev => \n      prev.reduce((ack, item) => {\n        if(item.id === id) {\n          if(item.amount === 1) return ack;\n          return [...ack, { ...item, amount: item.amount - 1 }];\n        }else{\n          return [...ack, item]\n        }\n      }, [] as CartItemType[])\n    );\n  };\n\n  //barra de cargando al refresh\n  if(isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong ...</div>;\n\n\n\n  return (\n    <Wrapper>\n      <Drawer anchor=\"right\" open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart \n          cartItems={cartItems} \n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n        />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color=\"error\">\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map(item => (\n          <Grid item key={item.id}xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n    )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst client = new QueryClient();\n\nReactDOM.render(\n    <QueryClientProvider client={client}>\n        <App />\n    </QueryClientProvider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}